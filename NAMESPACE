# Generated by roxygen2: do not edit by hand

S3method(cimage,cell.data)
S3method(cimage,cell.image)
S3method(get_cell_image,cell.data)
S3method(get_cell_image,data.frame)
export("%>%")
export(.format.sequence)
export(annotation_magick)
export(append_hues)
export(append_hues2)
export(bind_filters)
export(cell.load.alt)
export(cell2)
export(cellArgs2)
export(cellid)
export(cimage)
export(d)
export(get_cell_image)
export(get_workflow_template)
export(helloWorld)
export(hu.moments)
export(hues_from_tsv2)
export(hues_from_tsv_files2)
export(hues_from_xy2)
export(is.cell.data)
export(kmeans_clustering)
export(load_cell_data)
export(magickCell)
export(magickForKnitr)
export(magickPaths)
export(plotApp)
export(plot_bound_filters)
export(plot_filters)
export(qc_execute)
export(qc_filter)
export(qc_reset)
export(qc_undo)
export(rangeExpand)
export(read_tiff_masks)
export(read_tiff_tags)
export(shinyCell)
export(square_tile)
export(tagCell)
export(write.delim)
import(doParallel)
import(dplyr)
import(foreach, except = c("when", "accumulate"))
import(formattable)
import(ggplot2)
import(grDevices)
import(hexbin)
import(magick)
import(parallel)
import(purrr)
import(readr)
import(shiny)
import(shinydashboard)
import(shinyjs)
import(stringr)
import(tidyr)
importFrom(IRanges,IRanges)
importFrom(IRanges,reduce)
importFrom(data.table,rbindlist)
importFrom(grDevices,col2rgb)
importFrom(grDevices,dev.list)
importFrom(grDevices,dev.off)
importFrom(grDevices,dev.size)
importFrom(grDevices,rgb)
importFrom(grDevices,tiff)
importFrom(graphics,image)
importFrom(graphics,lines)
importFrom(graphics,par)
importFrom(graphics,plot.new)
importFrom(graphics,polygon)
importFrom(graphics,text)
importFrom(ijtiff,read_tags)
importFrom(plyr,adply)
importFrom(purrr,"%>%")
importFrom(purrr,map)
importFrom(rlang,parse_expr)
importFrom(sp,point.in.polygon)
importFrom(stats,na.omit)
importFrom(utils,capture.output)
importFrom(utils,glob2rx)
importFrom(utils,globalVariables)
importFrom(utils,head)
importFrom(utils,read.delim)
importFrom(utils,sessionInfo)
importFrom(utils,write.table)
