CC=ccache clang -Qunused-arguments
CXX=ccache clang++ -Qunused-arguments
CCACHE_CPP2=yes

# Include de archivos ".h"
# apparently unnecesary
PKG_CPPFLAGS= -I./tiff410/libtiff
# Links a archivos ".so" (las libraries)
PKG_LIBS= -L./tiff410/r_build/libtiff -ltiff -ljpeg -llzma -lz

MAKEFLAGS = -j4


# https://makefiletutorial.com/
# A Makefile consists of a set of rules. A rule generally looks like this:
# 
# targets : prerequisites
#    command
#    command
#    command

# Adding .PHONY to a target will prevent make from confusing the phony target with a file name. 
# For example, if the file “clean” is created somehow elsewhere, "make clean" will still be run.
.PHONY: all tiflibs rbuildcleanup

all: $(SHLIB) rbuildcleanup

$(SHLIB): tiflibs

# Note that each command is run independently, that's why all must have have a cd prepended.
tiflibs:
	mkdir -p tiff410/r_build  # i do not know why the "r_build" directory that exists in src/ is not copied and must be recreated
	cd tiff410/r_build && cmake --clean-first ../ && make all -j4 -B && cmake --target clean ../

# The cleanup target must depend on the rest in order to be execured last in a parallel compilation
rbuildcleanup: tiflibs $(SHLIB)
	rm -rf tiff410/r_build/*
