% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/definitions_magick.R
\name{cellStrips}
\alias{cellStrips}
\title{Wraps cellMagick to make strips, optionally cutting them.}
\usage{
cellStrips(
  cdata,
  paths,
  n_ucids = NULL,
  cut_breaks = 1,
  split_col = "ucid",
  ch = c("BF.out", "yfp.out"),
  sortVar = "t.frame",
  ...
)
}
\arguments{
\item{cdata}{A Rcell data.frame (not the object).}

\item{paths}{A paths dataframe with file path, t.frame, position and channel information of each picture.}

\item{n_ucids}{Will select the first `n_ucids`, by default (NULL) it selects all.}

\item{cut_breaks}{Will split each strip into `cut_breaks` pieces.}

\item{split_col}{Column from cdata used to separate different sets of cells.}

\item{ch}{Name of the CellID channel (BF, BF.out, RFP, etc.). "BF.out" by default, use a vector to select more than one channel simultaneously (images will be stacked).}

\item{sortVar}{Column from cdata used to sort the pictures in the strips.}

\item{...}{
  Arguments passed on to \code{\link[=magickCell]{magickCell}}
  \describe{
    \item{\code{max_composite_size}}{Maximum size of the final composite image (this resize is applied last) in pixels. 1000 by default.}
    \item{\code{cell_resize}}{Resize string for the individual cell images (\code{NULL} translates to \code{boxSize}x\code{boxSize} by default).}
    \item{\code{boxSize}}{Size of the box containing the individual cell images. 50 by default.}
    \item{\code{n.cells}}{maximum number of cells to display.}
    \item{\code{equalize_images}}{Use magick's function to "equalize" the image when TRUE (FALSE by default). Can be a logical vector, each value applied separately to each channel (recycled to the length of \code{ch}).}
    \item{\code{normalize_images}}{Use magick's function to "normalize" the image when TRUE (FALSE by default). Can be a logical vector, each value applied separately to each channel (recycled to the length of \code{ch}).}
    \item{\code{cutomize_images}}{Use a custom magick-like function to "customize" the image when TRUE (FALSE by default). Can be a logical vector, each value applied separately to each channel (recycled to the length of \code{ch}).}
    \item{\code{image_customize}}{A custom magick-like function to "customize" the channels specified in \code{cutomize_images}. Defaults to NULL (disabled).}
    \item{\code{seed}}{Seed value for sampling of cell images. NULL by default, to disable sampling.}
    \item{\code{.debug}}{Print more messages if TRUE.}
    \item{\code{return_single_imgs}}{If TRUE, return a vector of images instead of a tile.}
    \item{\code{return_ucid_df}}{If TRUE, return is a list of magick images and ucid dataframes.}
    \item{\code{annotation_params}}{Set to NULL to skip annotations, or a named list with values for magick::annotate options (one or more of the names "color" "background" "size"). Note that size close to zero can be invisible.}
    \item{\code{add_border}}{Add a 1x1 border to the pictures. Useful for stacking/appending.}
    \item{\code{stack_vertical_first}}{Set to TRUE to stack images vertically first (useful when \code{return_single_imgs = T}).}
    \item{\code{return_raw}}{Returns loaded images prematurely (i.e. without any processing other than magick::image_read and magick::image_crop).}
    \item{\code{crop_images}}{Whether to crop images to a box centered on the cell's XY position (TRUE, default), or the full image (FALSE).}
  }}

\item{cut_strips}{Use `cut` to split the image series (by index; preserves sortVar order).}
}
\description{
`cdata` is split by `split_col` and then images are generated.
}
\details{
`images` are split with `cut`, useful wen strips are too long.
}
