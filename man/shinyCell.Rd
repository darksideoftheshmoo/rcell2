% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shinyCell.R
\name{shinyCell}
\alias{shinyCell}
\title{Filtrar cdata usando gráficos y dibujando regiones}
\usage{
shinyCell(
  cdata,
  pdata,
  paths,
  filters = list(),
  filters.init_selected = T,
  plotType = "Dots",
  seed = 1,
  initial_facet = "",
  initial_vars = NULL,
  facet_grid_option = TRUE,
  facets_scale_free = "fixed",
  n_max = 100,
  boxSize = 80,
  temp_rds = NULL,
  ...
)
}
\arguments{
\item{cdata}{A Rcell "cdata" data.frame (not the object).}

\item{pdata}{A "pdata" data.frame with position metadata.}

\item{paths}{Paths a la imagen de cada posición.}

\item{filters}{Vector de strings con los filtros. c() by default.}

\item{plotType}{"Hex", "Density", and "Dots" are available.}

\item{seed}{Seed value for sampling of cell images.}

\item{initial_facet}{Initial facet formula as a string.}

\item{initial_vars}{Initial cdata variables as a string vector (default NULL, for 'a.tot' and 'fft.stat').}

\item{facet_grid_option}{Use facet_grid (TRUE, default) or facet_wrap.}

\item{facets_scale_free}{Use facets with fixed scales (NULL, default) or free scales ("free").}

\item{boxSize}{Size in pixels for individual cells' images.}

\item{...}{Further arguments passed to magickCell()}
}
\value{
Lots of stuff.
}
\description{
Filtrar cdata usando gráficos y dibujando regiones
}
\examples{
path <- "/mac/apesta/trololololol/"

cell.data <- rcell2::cell.load.alt(path = path)

image.paths <- cell.data$d.paths  # image.paths <- rcell2::magickPaths(cell.data)

pdata <- read_tsv(paste0(path, "pdata.csv"))

cdata <- left_join(cell.data$d, pdata)

rcell2::shinyCell(cdata = cdata, 
                  pdata = pdata, 
                  paths = cell.data$d.paths, 
                  n_max = 5^2, 
                  boxSize = 100)
}
