% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tagCell.R
\name{tagCell}
\alias{tagCell}
\title{Filtrar cdata usando gráficos y dibujando regiones}
\usage{
tagCell(
  cdata,
  pdata,
  paths,
  cell_tags,
  tag_box_size = 50,
  cell_resize = 100,
  tag_channels_select = c("BF"),
  n_max = 10,
  seed = 1,
  tmp_output_file = NULL,
  tag_ggplot = NULL,
  .equalize = F,
  .normalize = T,
  debug_messages = F,
  ...
)
}
\arguments{
\item{cdata}{dataframe of "cell data"}

\item{pdata}{dataframe "position data"}

\item{paths}{dataframe of image paths}

\item{cell_tags}{list of named vectors corresponding to tag groups and tags: list(named_item1 = c(option1, option2, ...), named_item2 ...)}

\item{tag_box_size}{size of the image crop in pixels}

\item{cell_resize}{resize of the image crop in pixels}

\item{tag_channels_select}{a vector giving names for the image channels: c("BF", "YFP.out", etc....)}

\item{n_max}{max number of boxes in the image}

\item{seed}{seed for random sampling of images}

\item{tmp_output_file}{file path into which tagging information will be dumped by user request}

\item{tag_ggplot}{a ggplot object to display in the second tab, may be used for something someday.}

\item{.equalize}{Use magick's function to "equalize" the images.}

\item{.normalize}{Use magick's function to "normalize" the images.}

\item{debug_messages}{print debug messages}

\item{...}{arguments for magickCell}
}
\value{
Lots of stuff.
}
\description{
Filtrar cdata usando gráficos y dibujando regiones
}
\examples{
path <- "/mac/apesta/trololololol/"

cell.data <- rcell2::cell.load.alt(path = path)

image.paths <- cell.data$d.paths  # Si usaste load_cell es: image.paths <- rcell2::magickPaths(cell.data)

pdata <- read_tsv(paste0(path, "pdata.csv"))

cdata <- left_join(cell.data$d, pdata)

p <- ggplot() + 
  geom_line(aes(x=t.frame, y=cf.y, group=ucid))

tag_channels_select <- c("BF", "BF.out", "YFP", "YFP.out")

saved <- rcell2::tagCell(cdata,
                         pdata, 
                         image.paths,
                         cell_tags = list(far1_drop = c(TRUE,
                                                        FALSE),
                                          budding =   c("emergence",
                                                        "division", 
                                                        "shmoo_o_algo"),
                                          artifact =  c("segmentation",
                                                        "crowding",
                                                        "out_of_focus",
                                                        "interesante",
                                                        "death",
                                                        "flown_away",
                                                        "not_a_cell")
                         ),
                         tag_channels_select = tag_channels_select,
                         .equalize = T,
                         .normalize = F,
                         n_max = 50,
                         tag_box_size = 75,
                         cell_resize = 300,
                         tag_ggplot = p,
                         tmp_output_file = "../output/annotations/progress.csv", 
                         debug_messages = F,
                         annotation_params = c(color = "none", background = "none")
                         )
                         
}
