% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_mask_data.R
\name{cell.load.boundaries}
\alias{cell.load.boundaries}
\title{Load CellID boundary data to a dataframe}
\usage{
cell.load.boundaries(
  data.source,
  position_pattern = ".*Position(\\\\d+)$",
  tsv_pattern = "^out_all_masks.tsv(?:\\\\.gz)?$",
  cell_id_offset = -1,
  interior_offset = NULL,
  blank_bg = NULL,
  arguments = NULL,
  pixel.type = "b",
  flags = NULL,
  close.paths = FALSE,
  cell.data = NULL,
  tiff.channel = "BF.out"
)
}
\arguments{
\item{data.source}{Either "out.tif" or "masks.tsv".}

\item{position_pattern}{A regex pattern with one group for the integer position number, extracted from the directory name holding the TSV file.}

\item{tsv_pattern}{A regex pattern matching the name of the TSV file (\code{readr::read_tsv} supports reading "gz" compressed files direclty).}

\item{cell_id_offset}{integer. The pixel intensity offset with respect to maximum pixel intensity, such
that \code{cellID = maximum_intensity - boundary_intensity + cell_id_offset}.}

\item{interior_offset}{logical. If \code{TRUE} the function expects that
cell masks have interior pixels offset from boundary pixels (set to TRUE if NULL; the default).}

\item{blank_bg}{logical. If \code{TRUE} the function assumes that the image
background (i.e., non-mask pixels) are blank. Set to FALSE if left NULL (the default).}

\item{arguments}{The arguments dataframe used to run cellid (prepared with \code{rcell2.cellid::arguments}).}

\item{pixel.type}{When \code{data.source = "masks.tsv"}, you may choose the pixel "type". At least one of \code{c("i", "b")} for interior and/or boundary pixels ("b" by default).}

\item{flags}{Used to subset the input files by CellID's "flag" field. Each flag corresponds to an imaging channel, according to a "mapping" found in \code{cell.data$mapping} (available when using cell.load.alt).}

\item{close.paths}{When TRUE and \code{data.source = "masks.tsv"}, append the first row to the end of the data.frame (groping by cellID and pos). Useful for plotting of making closed polygons.}

\item{cell.data}{When \code{data.source = "out.tif"}, you **must** provide the cell.data object (prepared with \code{rcell2.cellid::cell.load.alt}).}

\item{tiff.channel}{When \code{data.source = "out.tif"}, provide the channel name for images holding boundary data ('BF.out' by default).}
}
\value{
A "cell.boundaries" data.frame.
}
\description{
Load CellID boundary data to a dataframe
}
\details{
Using \code{data_source = "out.tif"} will give **un** ordered boundary pixels.
See \code{read_tiff_masks} for details and caveats.
CellID must have been run with the "encode_cellID_in_pixels" option enabled.

Using \code{data_source = "masks.tsv"} will give ordered boundary pixels.
CellID must have been run with the "output_coords_to_tsv" option enabled.
However, in some cases, the pixel sequence may not be "manifold"
(see: https://github.com/darksideoftheshmoo/cellID-linux/issues/11).
Also, do not expect them to be consistent in their direction (clockwise or 
anti-clockwise), and double check if the pixels are aligned to the output images
(see: https://github.com/darksideoftheshmoo/rcell2/issues/29).
}
